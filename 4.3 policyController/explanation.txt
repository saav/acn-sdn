This module works in a proactive mode. It is dependant on discovery module.
The idea behind this module is to assign all switches and hosts topology aware IP addresses. Knowning all IP addresses in advance, routing rules are installed.
Routing is based on the short path calculation. Hosts and switches get IP addresses by DHCP protocol from the controller.
DHCP protocol from the controller.
Rules for creating IP addresses look the following way:

1. Switch address has a format of 10.<switch_id>.0.1
2. Network address has a format of 10.<switch_id>.0.0
3. Host address has a format of 10.<switch_id>.<switch_port_id>.<host_id>

Where

1. switch_id is generated by controller reflection just the ordering number
2. switch_port_id is a switch port number where host is connected to
3. host_id is the ordering number of a host

Start POX using the following command line.
./pox.py log.level --DEBUG policyController openflow.discovery

For mininet:
sudo mn --custom ./mytopo3.py --topo mytopo --mac --switch ovsk --controller remote

execute the following commands inside mininet shell:
h1 dhclient h1-eth0
h2 dhclient h2-eth0
h3 dhclient h3-eth0
h4 dhclient h4-eth0

The policy controller could have worked better with spanning_tree module - topology with loops.
Implement - Consider all paths from s3 for packets originating through h1 nad h2 with destination h4. Choose the shortest path then. 